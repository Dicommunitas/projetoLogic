// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package br.com.projetologic.model;

import br.com.projetologic.model.Contrato;
import br.com.projetologic.model.Embarcador;
import br.com.projetologic.model.Viagem;
import io.springlets.format.EntityFormat;
import javax.persistence.Entity;
import org.springframework.util.Assert;

privileged aspect Embarcador_Roo_Jpa_Entity {
    
    declare @type: Embarcador: @Entity;
    
    declare @type: Embarcador: @EntityFormat("#{razaoSocial} (#{cnpj})");
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String Embarcador.ITERABLE_TO_ADD_CANT_BE_NULL_MESSAGE = "The given Iterable of items to add can't be null!";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String Embarcador.ITERABLE_TO_REMOVE_CANT_BE_NULL_MESSAGE = "The given Iterable of items to add can't be null!";
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param contratosToAdd
     */
    public void Embarcador.addToContratos(Iterable<Contrato> contratosToAdd) {
        Assert.notNull(contratosToAdd, ITERABLE_TO_ADD_CANT_BE_NULL_MESSAGE);
        for (Contrato item : contratosToAdd) {
            this.contratos.add(item);
            item.setContratante(this);
        }
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param contratosToRemove
     */
    public void Embarcador.removeFromContratos(Iterable<Contrato> contratosToRemove) {
        Assert.notNull(contratosToRemove, ITERABLE_TO_REMOVE_CANT_BE_NULL_MESSAGE);
        for (Contrato item : contratosToRemove) {
            this.contratos.remove(item);
            item.setContratante(null);
        }
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param viagensToAdd
     */
    public void Embarcador.addToViagens(Iterable<Viagem> viagensToAdd) {
        Assert.notNull(viagensToAdd, ITERABLE_TO_ADD_CANT_BE_NULL_MESSAGE);
        for (Viagem item : viagensToAdd) {
            this.viagens.add(item);
            item.setEmbarcador(this);
        }
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param viagensToRemove
     */
    public void Embarcador.removeFromViagens(Iterable<Viagem> viagensToRemove) {
        Assert.notNull(viagensToRemove, ITERABLE_TO_REMOVE_CANT_BE_NULL_MESSAGE);
        for (Viagem item : viagensToRemove) {
            this.viagens.remove(item);
            item.setEmbarcador(null);
        }
    }
    
}
