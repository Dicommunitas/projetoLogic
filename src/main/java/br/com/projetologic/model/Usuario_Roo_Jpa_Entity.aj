// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package br.com.projetologic.model;

import br.com.projetologic.model.Regra;
import br.com.projetologic.model.Usuario;
import br.com.projetologic.model.Viagem;
import io.springlets.format.EntityFormat;
import javax.persistence.Entity;
import org.springframework.util.Assert;

privileged aspect Usuario_Roo_Jpa_Entity {
    
    declare @type: Usuario: @Entity;
    
    declare @type: Usuario: @EntityFormat("#{nome} - #{cpf}");
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String Usuario.ITERABLE_TO_ADD_CANT_BE_NULL_MESSAGE = "The given Iterable of items to add can't be null!";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String Usuario.ITERABLE_TO_REMOVE_CANT_BE_NULL_MESSAGE = "The given Iterable of items to add can't be null!";
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param viagensExpedicaoToAdd
     */
    public void Usuario.addToViagensExpedicao(Iterable<Viagem> viagensExpedicaoToAdd) {
        Assert.notNull(viagensExpedicaoToAdd, ITERABLE_TO_ADD_CANT_BE_NULL_MESSAGE);
        for (Viagem item : viagensExpedicaoToAdd) {
            this.viagensExpedicao.add(item);
            item.setUsuarioExpedicao(this);
        }
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param viagensExpedicaoToRemove
     */
    public void Usuario.removeFromViagensExpedicao(Iterable<Viagem> viagensExpedicaoToRemove) {
        Assert.notNull(viagensExpedicaoToRemove, ITERABLE_TO_REMOVE_CANT_BE_NULL_MESSAGE);
        for (Viagem item : viagensExpedicaoToRemove) {
            this.viagensExpedicao.remove(item);
            item.setUsuarioExpedicao(null);
        }
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param viagensCallCenterToAdd
     */
    public void Usuario.addToViagensCallCenter(Iterable<Viagem> viagensCallCenterToAdd) {
        Assert.notNull(viagensCallCenterToAdd, ITERABLE_TO_ADD_CANT_BE_NULL_MESSAGE);
        for (Viagem item : viagensCallCenterToAdd) {
            this.viagensCallCenter.add(item);
            item.setUsuarioCallCenter(this);
        }
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param viagensCallCenterToRemove
     */
    public void Usuario.removeFromViagensCallCenter(Iterable<Viagem> viagensCallCenterToRemove) {
        Assert.notNull(viagensCallCenterToRemove, ITERABLE_TO_REMOVE_CANT_BE_NULL_MESSAGE);
        for (Viagem item : viagensCallCenterToRemove) {
            this.viagensCallCenter.remove(item);
            item.setUsuarioCallCenter(null);
        }
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param viagensLogisticaReversaToAdd
     */
    public void Usuario.addToViagensLogisticaReversa(Iterable<Viagem> viagensLogisticaReversaToAdd) {
        Assert.notNull(viagensLogisticaReversaToAdd, ITERABLE_TO_ADD_CANT_BE_NULL_MESSAGE);
        for (Viagem item : viagensLogisticaReversaToAdd) {
            this.viagensLogisticaReversa.add(item);
            item.setUsuarioLogisticaReversa(this);
        }
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param viagensLogisticaReversaToRemove
     */
    public void Usuario.removeFromViagensLogisticaReversa(Iterable<Viagem> viagensLogisticaReversaToRemove) {
        Assert.notNull(viagensLogisticaReversaToRemove, ITERABLE_TO_REMOVE_CANT_BE_NULL_MESSAGE);
        for (Viagem item : viagensLogisticaReversaToRemove) {
            this.viagensLogisticaReversa.remove(item);
            item.setUsuarioLogisticaReversa(null);
        }
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param acessosToAdd
     */
    public void Usuario.addToAcessos(Iterable<Regra> acessosToAdd) {
        Assert.notNull(acessosToAdd, ITERABLE_TO_ADD_CANT_BE_NULL_MESSAGE);
        for (Regra item : acessosToAdd) {
            this.acessos.add(item);
            item.getUsuarios().add(this);
        }
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param acessosToRemove
     */
    public void Usuario.removeFromAcessos(Iterable<Regra> acessosToRemove) {
        Assert.notNull(acessosToRemove, ITERABLE_TO_REMOVE_CANT_BE_NULL_MESSAGE);
        for (Regra item : acessosToRemove) {
            this.acessos.remove(item);
            item.getUsuarios().remove(this);
        }
    }
    
}
