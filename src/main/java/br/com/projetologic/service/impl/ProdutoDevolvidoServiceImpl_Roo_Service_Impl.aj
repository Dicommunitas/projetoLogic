// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package br.com.projetologic.service.impl;

import br.com.projetologic.model.ProdutoDevolvido;
import br.com.projetologic.model.Viagem;
import br.com.projetologic.repository.ProdutoDevolvidoRepository;
import br.com.projetologic.service.impl.ProdutoDevolvidoServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect ProdutoDevolvidoServiceImpl_Roo_Service_Impl {
    
    declare @type: ProdutoDevolvidoServiceImpl: @Service;
    
    declare @type: ProdutoDevolvidoServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private ProdutoDevolvidoRepository ProdutoDevolvidoServiceImpl.produtoDevolvidoRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param produtoDevolvidoRepository
     */
    @Autowired
    public ProdutoDevolvidoServiceImpl.new(ProdutoDevolvidoRepository produtoDevolvidoRepository) {
        setProdutoDevolvidoRepository(produtoDevolvidoRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return ProdutoDevolvidoRepository
     */
    public ProdutoDevolvidoRepository ProdutoDevolvidoServiceImpl.getProdutoDevolvidoRepository() {
        return produtoDevolvidoRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param produtoDevolvidoRepository
     */
    public void ProdutoDevolvidoServiceImpl.setProdutoDevolvidoRepository(ProdutoDevolvidoRepository produtoDevolvidoRepository) {
        this.produtoDevolvidoRepository = produtoDevolvidoRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param produtoDevolvido
     */
    @Transactional
    public void ProdutoDevolvidoServiceImpl.delete(ProdutoDevolvido produtoDevolvido) {
        // Clear bidirectional many-to-one child relationship with Viagem
        if (produtoDevolvido.getViagem() != null) {
            produtoDevolvido.getViagem().getProdutosDevolvidos().remove(produtoDevolvido);
        }
        
        getProdutoDevolvidoRepository().delete(produtoDevolvido);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<ProdutoDevolvido> ProdutoDevolvidoServiceImpl.save(Iterable<ProdutoDevolvido> entities) {
        return getProdutoDevolvidoRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void ProdutoDevolvidoServiceImpl.delete(Iterable<Long> ids) {
        List<ProdutoDevolvido> toDelete = getProdutoDevolvidoRepository().findAll(ids);
        getProdutoDevolvidoRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return ProdutoDevolvido
     */
    @Transactional
    public ProdutoDevolvido ProdutoDevolvidoServiceImpl.save(ProdutoDevolvido entity) {
        return getProdutoDevolvidoRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return ProdutoDevolvido
     */
    public ProdutoDevolvido ProdutoDevolvidoServiceImpl.findOne(Long id) {
        return getProdutoDevolvidoRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return ProdutoDevolvido
     */
    public ProdutoDevolvido ProdutoDevolvidoServiceImpl.findOneForUpdate(Long id) {
        return getProdutoDevolvidoRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<ProdutoDevolvido> ProdutoDevolvidoServiceImpl.findAll(Iterable<Long> ids) {
        return getProdutoDevolvidoRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<ProdutoDevolvido> ProdutoDevolvidoServiceImpl.findAll() {
        return getProdutoDevolvidoRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long ProdutoDevolvidoServiceImpl.count() {
        return getProdutoDevolvidoRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<ProdutoDevolvido> ProdutoDevolvidoServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getProdutoDevolvidoRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<ProdutoDevolvido> ProdutoDevolvidoServiceImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        return getProdutoDevolvidoRepository().findAllByIdsIn(ids, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param viagem
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<ProdutoDevolvido> ProdutoDevolvidoServiceImpl.findByViagem(Viagem viagem, GlobalSearch globalSearch, Pageable pageable) {
        return getProdutoDevolvidoRepository().findByViagem(viagem, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param viagem
     * @return Long
     */
    public long ProdutoDevolvidoServiceImpl.countByViagem(Viagem viagem) {
        return getProdutoDevolvidoRepository().countByViagem(viagem);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<ProdutoDevolvido> ProdutoDevolvidoServiceImpl.getEntityType() {
        return ProdutoDevolvido.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> ProdutoDevolvidoServiceImpl.getIdType() {
        return Long.class;
    }
    
}
