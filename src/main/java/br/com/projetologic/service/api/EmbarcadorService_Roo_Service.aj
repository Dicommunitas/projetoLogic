// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package br.com.projetologic.service.api;

import br.com.projetologic.model.Embarcador;
import br.com.projetologic.service.api.EmbarcadorService;
import io.springlets.data.domain.GlobalSearch;
import java.util.List;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

privileged aspect EmbarcadorService_Roo_Service {
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Embarcador
     */
    public abstract Embarcador EmbarcadorService.findOne(Long id);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param embarcador
     */
    public abstract void EmbarcadorService.delete(Embarcador embarcador);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    public abstract List<Embarcador> EmbarcadorService.save(Iterable<Embarcador> entities);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    public abstract void EmbarcadorService.delete(Iterable<Long> ids);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Embarcador
     */
    public abstract Embarcador EmbarcadorService.save(Embarcador entity);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Embarcador
     */
    public abstract Embarcador EmbarcadorService.findOneForUpdate(Long id);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public abstract List<Embarcador> EmbarcadorService.findAll(Iterable<Long> ids);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public abstract List<Embarcador> EmbarcadorService.findAll();
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public abstract long EmbarcadorService.count();
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public abstract Page<Embarcador> EmbarcadorService.findAll(GlobalSearch globalSearch, Pageable pageable);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public abstract Page<Embarcador> EmbarcadorService.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param embarcador
     * @param contratosToAdd
     * @return Embarcador
     */
    public abstract Embarcador EmbarcadorService.addToContratos(Embarcador embarcador, Iterable<Long> contratosToAdd);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param embarcador
     * @param contratosToRemove
     * @return Embarcador
     */
    public abstract Embarcador EmbarcadorService.removeFromContratos(Embarcador embarcador, Iterable<Long> contratosToRemove);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param embarcador
     * @param contratos
     * @return Embarcador
     */
    public abstract Embarcador EmbarcadorService.setContratos(Embarcador embarcador, Iterable<Long> contratos);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param embarcador
     * @param viagensToAdd
     * @return Embarcador
     */
    public abstract Embarcador EmbarcadorService.addToViagens(Embarcador embarcador, Iterable<Long> viagensToAdd);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param embarcador
     * @param viagensToRemove
     * @return Embarcador
     */
    public abstract Embarcador EmbarcadorService.removeFromViagens(Embarcador embarcador, Iterable<Long> viagensToRemove);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param embarcador
     * @param viagens
     * @return Embarcador
     */
    public abstract Embarcador EmbarcadorService.setViagens(Embarcador embarcador, Iterable<Long> viagens);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param cnpj
     * @param pageable
     * @return Page
     */
    public abstract Page<Embarcador> EmbarcadorService.findByCnpjEquals(String cnpj, Pageable pageable);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param cnpj
     * @return Long
     */
    public abstract long EmbarcadorService.countByCnpjEquals(String cnpj);
    
}
