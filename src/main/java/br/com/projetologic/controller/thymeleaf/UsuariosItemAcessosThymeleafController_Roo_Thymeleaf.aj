// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package br.com.projetologic.controller.thymeleaf;

import br.com.projetologic.controller.thymeleaf.UsuariosCollectionThymeleafController;
import br.com.projetologic.controller.thymeleaf.UsuariosCollectionThymeleafLinkFactory;
import br.com.projetologic.controller.thymeleaf.UsuariosItemAcessosThymeleafController;
import br.com.projetologic.model.Regra;
import br.com.projetologic.model.Usuario;
import br.com.projetologic.service.api.RegraService;
import br.com.projetologic.service.api.UsuarioService;
import io.springlets.data.domain.GlobalSearch;
import io.springlets.data.web.datatables.ConvertedDatatablesData;
import io.springlets.data.web.datatables.Datatables;
import io.springlets.data.web.datatables.DatatablesColumns;
import io.springlets.data.web.datatables.DatatablesPageable;
import io.springlets.web.NotFoundException;
import io.springlets.web.mvc.util.ControllerMethodLinkBuilderFactory;
import io.springlets.web.mvc.util.MethodLinkBuilderFactory;
import java.util.Collection;
import java.util.Collections;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Locale;
import java.util.Objects;
import org.apache.commons.lang3.StringUtils;
import org.joda.time.format.DateTimeFormat;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.MessageSource;
import org.springframework.context.i18n.LocaleContextHolder;
import org.springframework.core.convert.ConversionService;
import org.springframework.data.domain.Page;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

privileged aspect UsuariosItemAcessosThymeleafController_Roo_Thymeleaf {
    
    declare @type: UsuariosItemAcessosThymeleafController: @Controller;
    
    declare @type: UsuariosItemAcessosThymeleafController: @RequestMapping(value = "/usuarios/{usuario}/acessos", name = "UsuariosItemAcessosThymeleafController", produces = MediaType.TEXT_HTML_VALUE);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private UsuarioService UsuariosItemAcessosThymeleafController.usuarioService;
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private RegraService UsuariosItemAcessosThymeleafController.regraService;
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private MessageSource UsuariosItemAcessosThymeleafController.messageSource;
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private MethodLinkBuilderFactory<UsuariosCollectionThymeleafController> UsuariosItemAcessosThymeleafController.collectionLink;
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private ConversionService UsuariosItemAcessosThymeleafController.conversionService;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param usuarioService
     * @param regraService
     * @param conversionService
     * @param messageSource
     * @param linkBuilder
     */
    @Autowired
    public UsuariosItemAcessosThymeleafController.new(UsuarioService usuarioService, RegraService regraService, ConversionService conversionService, MessageSource messageSource, ControllerMethodLinkBuilderFactory linkBuilder) {
        setUsuarioService(usuarioService);
        setRegraService(regraService);
        setConversionService(conversionService);
        setMessageSource(messageSource);
        setCollectionLink(linkBuilder.of(UsuariosCollectionThymeleafController.class));
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return UsuarioService
     */
    public UsuarioService UsuariosItemAcessosThymeleafController.getUsuarioService() {
        return usuarioService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param usuarioService
     */
    public void UsuariosItemAcessosThymeleafController.setUsuarioService(UsuarioService usuarioService) {
        this.usuarioService = usuarioService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return RegraService
     */
    public RegraService UsuariosItemAcessosThymeleafController.getRegraService() {
        return regraService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param regraService
     */
    public void UsuariosItemAcessosThymeleafController.setRegraService(RegraService regraService) {
        this.regraService = regraService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return MessageSource
     */
    public MessageSource UsuariosItemAcessosThymeleafController.getMessageSource() {
        return messageSource;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param messageSource
     */
    public void UsuariosItemAcessosThymeleafController.setMessageSource(MessageSource messageSource) {
        this.messageSource = messageSource;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return MethodLinkBuilderFactory
     */
    public MethodLinkBuilderFactory<UsuariosCollectionThymeleafController> UsuariosItemAcessosThymeleafController.getCollectionLink() {
        return collectionLink;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param collectionLink
     */
    public void UsuariosItemAcessosThymeleafController.setCollectionLink(MethodLinkBuilderFactory<UsuariosCollectionThymeleafController> collectionLink) {
        this.collectionLink = collectionLink;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return ConversionService
     */
    public ConversionService UsuariosItemAcessosThymeleafController.getConversionService() {
        return conversionService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param conversionService
     */
    public void UsuariosItemAcessosThymeleafController.setConversionService(ConversionService conversionService) {
        this.conversionService = conversionService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @param locale
     * @param method
     * @return Usuario
     */
    @ModelAttribute
    public Usuario UsuariosItemAcessosThymeleafController.getUsuario(@PathVariable("usuario") Long id, Locale locale, HttpMethod method) {
        Usuario usuario = null;
        if (HttpMethod.PUT.equals(method)) {
            usuario = usuarioService.findOneForUpdate(id);
        } else {
            usuario = usuarioService.findOne(id);
        }
        
        if (usuario == null) {
            String message = messageSource.getMessage("error_NotFound", new Object[] {"Usuario", id}, "The record couldn't be found", locale);
            throw new NotFoundException(message);
        }
        return usuario;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param model
     */
    public void UsuariosItemAcessosThymeleafController.populateFormats(Model model) {
        model.addAttribute("application_locale", LocaleContextHolder.getLocale().getLanguage());
        model.addAttribute("createdDate_date_format", DateTimeFormat.patternForStyle("M-", LocaleContextHolder.getLocale()));
        model.addAttribute("modifiedDate_date_format", DateTimeFormat.patternForStyle("M-", LocaleContextHolder.getLocale()));
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param model
     */
    public void UsuariosItemAcessosThymeleafController.populateForm(Model model) {
        populateFormats(model);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param usuarios
     * @param datatablesColumns
     * @param search
     * @param pageable
     * @param draw
     * @return ResponseEntity
     */
    @GetMapping(name = "datatables", produces = Datatables.MEDIA_TYPE, value = "/dt")
    @ResponseBody
    public ResponseEntity<ConvertedDatatablesData<Regra>> UsuariosItemAcessosThymeleafController.datatables(@ModelAttribute Usuario usuarios, DatatablesColumns datatablesColumns, GlobalSearch search, DatatablesPageable pageable, @RequestParam("draw") Integer draw) {
        
        Page<Regra> acessos = getRegraService().findByUsuariosContains(usuarios, search, pageable);
        long totalAcessosCount = getRegraService().countByUsuariosContains(usuarios);
        ConvertedDatatablesData<Regra> data =  new ConvertedDatatablesData<Regra>(acessos, totalAcessosCount, draw, getConversionService(), datatablesColumns);
        return ResponseEntity.ok(data);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param datatablesColumns
     * @param search
     * @param pageable
     * @param draw
     * @return ResponseEntity
     */
    @GetMapping(name = "datatablesByIdsIn", produces = Datatables.MEDIA_TYPE, value = "/dtByIdsIn")
    @ResponseBody
    public ResponseEntity<ConvertedDatatablesData<Regra>> UsuariosItemAcessosThymeleafController.datatablesByIdsIn(@RequestParam("ids") List<Long> ids, DatatablesColumns datatablesColumns, GlobalSearch search, DatatablesPageable pageable, @RequestParam("draw") Integer draw) {
        
        Page<Regra> acessos = getRegraService().findAllByIdsIn(ids, search, pageable);
        long totalAcessosCount = acessos.getTotalElements();
        ConvertedDatatablesData<Regra> data =  new ConvertedDatatablesData<Regra>(acessos, totalAcessosCount, draw, getConversionService(), datatablesColumns);
        return ResponseEntity.ok(data);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param usuario
     * @param model
     * @return ModelAndView
     */
    @GetMapping(value = "/create-form", name = "createForm")
    public ModelAndView UsuariosItemAcessosThymeleafController.createForm(@ModelAttribute Usuario usuario, Model model) {
        populateForm(model);
        model.addAttribute("regra", new Regra());
        return new ModelAndView("usuarios/acessos/create");
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param usuario
     * @param acessosToRemove
     * @return ResponseEntity
     */
    @DeleteMapping(name = "removeFromAcessos", value = "/{acessosToRemove}")
    @ResponseBody
    public ResponseEntity<?> UsuariosItemAcessosThymeleafController.removeFromAcessos(@ModelAttribute Usuario usuario, @PathVariable("acessosToRemove") Long acessosToRemove) {
        getUsuarioService().removeFromAcessos(usuario,Collections.singleton(acessosToRemove));
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param usuario
     * @param acessosToRemove
     * @return ResponseEntity
     */
    @DeleteMapping(name = "removeFromAcessosBatch", value = "/batch/{acessosToRemove}")
    @ResponseBody
    public ResponseEntity<?> UsuariosItemAcessosThymeleafController.removeFromAcessosBatch(@ModelAttribute Usuario usuario, @PathVariable("acessosToRemove") Collection<Long> acessosToRemove) {
        getUsuarioService().removeFromAcessos(usuario, acessosToRemove);
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param usuario
     * @param acessos
     * @param version
     * @param concurrencyControl
     * @param model
     * @return ModelAndView
     */
    @PostMapping(name = "create")
    public ModelAndView UsuariosItemAcessosThymeleafController.create(@ModelAttribute Usuario usuario, @RequestParam(value = "acessosIds", required = false) List<Long> acessos, @RequestParam("parentVersion") Integer version, @RequestParam(value = "concurrency", required = false, defaultValue = "") String concurrencyControl, Model model) {
        // Remove empty values
        if (acessos != null) {
            for (Iterator<Long> iterator = acessos.iterator(); iterator.hasNext();) {
                if (iterator.next() == null) {
                    iterator.remove();
                }
            }
        }
        // Concurrency control
        if(!Objects.equals(version, usuario.getVersion()) && StringUtils.isEmpty(concurrencyControl)){
            populateForm(model);
            // Obtain the selected books and include them in the author that will be 
            // included in the view
            if (acessos != null) {
                usuario.setAcessos(new HashSet<Regra>(getRegraService().findAll(acessos)));
            }else{
                usuario.setAcessos(new HashSet<Regra>());
            }
            // Reset the version to prevent update
             usuario.setVersion(version);
            // Include the updated element in the model
            model.addAttribute("usuario", usuario);
            model.addAttribute("concurrency", true);
            return new ModelAndView("usuarios/acessos/create");
        }else if(!Objects.equals(version, usuario.getVersion()) && "discard".equals(concurrencyControl)){
            populateForm(model);
            // Provide the original element from the Database
            model.addAttribute("usuario", usuario);
            model.addAttribute("concurrency", false);
            return new ModelAndView("usuarios/acessos/create");
        }
        getUsuarioService().setAcessos(usuario,acessos);
        return new ModelAndView("redirect:" + getCollectionLink().to(UsuariosCollectionThymeleafLinkFactory.LIST).toUriString());
    }
    
}
