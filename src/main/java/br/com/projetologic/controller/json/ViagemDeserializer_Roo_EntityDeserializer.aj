// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package br.com.projetologic.controller.json;

import br.com.projetologic.controller.json.ViagemDeserializer;
import br.com.projetologic.model.Viagem;
import br.com.projetologic.service.api.ViagemService;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonNode;
import io.springlets.web.NotFoundException;
import java.io.IOException;
import org.springframework.boot.jackson.JsonComponent;
import org.springframework.core.convert.ConversionService;

privileged aspect ViagemDeserializer_Roo_EntityDeserializer {
    
    declare @type: ViagemDeserializer: @JsonComponent;
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return ViagemService
     */
    public ViagemService ViagemDeserializer.getViagemService() {
        return viagemService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param viagemService
     */
    public void ViagemDeserializer.setViagemService(ViagemService viagemService) {
        this.viagemService = viagemService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return ConversionService
     */
    public ConversionService ViagemDeserializer.getConversionService() {
        return conversionService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param conversionService
     */
    public void ViagemDeserializer.setConversionService(ConversionService conversionService) {
        this.conversionService = conversionService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param jsonParser
     * @param context
     * @param codec
     * @param tree
     * @return Viagem
     * @throws IOException
     */
    public Viagem ViagemDeserializer.deserializeObject(JsonParser jsonParser, DeserializationContext context, ObjectCodec codec, JsonNode tree) throws IOException {
        String idText = tree.asText();
        Long id = conversionService.convert(idText, Long.class);
        Viagem viagem = viagemService.findOne(id);
        if (viagem == null) {
            throw new NotFoundException("Viagem not found");
        }
        return viagem;
    }
    
}
