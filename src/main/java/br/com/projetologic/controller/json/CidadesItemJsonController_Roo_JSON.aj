// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package br.com.projetologic.controller.json;

import br.com.projetologic.controller.json.CidadesItemJsonController;
import br.com.projetologic.model.Cidade;
import br.com.projetologic.service.api.CidadeService;
import io.springlets.web.NotFoundException;
import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder;
import org.springframework.web.util.UriComponents;

privileged aspect CidadesItemJsonController_Roo_JSON {
    
    declare @type: CidadesItemJsonController: @RestController;
    
    declare @type: CidadesItemJsonController: @RequestMapping(value = "/cidades/{cidade}", name = "CidadesItemJsonController", produces = MediaType.APPLICATION_JSON_VALUE);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private CidadeService CidadesItemJsonController.cidadeService;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param cidadeService
     */
    @Autowired
    public CidadesItemJsonController.new(CidadeService cidadeService) {
        this.cidadeService = cidadeService;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return CidadeService
     */
    public CidadeService CidadesItemJsonController.getCidadeService() {
        return cidadeService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param cidadeService
     */
    public void CidadesItemJsonController.setCidadeService(CidadeService cidadeService) {
        this.cidadeService = cidadeService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Cidade
     */
    @ModelAttribute
    public Cidade CidadesItemJsonController.getCidade(@PathVariable("cidade") Long id) {
        Cidade cidade = cidadeService.findOne(id);
        if (cidade == null) {
            throw new NotFoundException(String.format("Cidade with identifier '%s' not found",id));
        }
        return cidade;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param cidade
     * @return ResponseEntity
     */
    @GetMapping(name = "show")
    public ResponseEntity<?> CidadesItemJsonController.show(@ModelAttribute Cidade cidade) {
        return ResponseEntity.ok(cidade);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param cidade
     * @return UriComponents
     */
    public static UriComponents CidadesItemJsonController.showURI(Cidade cidade) {
        return MvcUriComponentsBuilder
            .fromMethodCall(
                MvcUriComponentsBuilder.on(CidadesItemJsonController.class).show(cidade))
            .buildAndExpand(cidade.getId()).encode();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param storedCidade
     * @param cidade
     * @param result
     * @return ResponseEntity
     */
    @PutMapping(name = "update")
    public ResponseEntity<?> CidadesItemJsonController.update(@ModelAttribute Cidade storedCidade, @Valid @RequestBody Cidade cidade, BindingResult result) {
        
        if (result.hasErrors()) {
            return ResponseEntity.status(HttpStatus.CONFLICT).body(result);
        }
        cidade.setId(storedCidade.getId());
        getCidadeService().save(cidade);
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param cidade
     * @return ResponseEntity
     */
    @DeleteMapping(name = "delete")
    public ResponseEntity<?> CidadesItemJsonController.delete(@ModelAttribute Cidade cidade) {
        getCidadeService().delete(cidade);
        return ResponseEntity.ok().build();
    }
    
}
