// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package br.com.projetologic.controller.json;

import br.com.projetologic.controller.json.ViagensItemJsonController;
import br.com.projetologic.model.Viagem;
import br.com.projetologic.service.api.ViagemService;
import io.springlets.web.NotFoundException;
import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder;
import org.springframework.web.util.UriComponents;

privileged aspect ViagensItemJsonController_Roo_JSON {
    
    declare @type: ViagensItemJsonController: @RestController;
    
    declare @type: ViagensItemJsonController: @RequestMapping(value = "/viagens/{viagem}", name = "ViagensItemJsonController", produces = MediaType.APPLICATION_JSON_VALUE);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private ViagemService ViagensItemJsonController.viagemService;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param viagemService
     */
    @Autowired
    public ViagensItemJsonController.new(ViagemService viagemService) {
        this.viagemService = viagemService;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return ViagemService
     */
    public ViagemService ViagensItemJsonController.getViagemService() {
        return viagemService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param viagemService
     */
    public void ViagensItemJsonController.setViagemService(ViagemService viagemService) {
        this.viagemService = viagemService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Viagem
     */
    @ModelAttribute
    public Viagem ViagensItemJsonController.getViagem(@PathVariable("viagem") Long id) {
        Viagem viagem = viagemService.findOne(id);
        if (viagem == null) {
            throw new NotFoundException(String.format("Viagem with identifier '%s' not found",id));
        }
        return viagem;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param viagem
     * @return ResponseEntity
     */
    @GetMapping(name = "show")
    public ResponseEntity<?> ViagensItemJsonController.show(@ModelAttribute Viagem viagem) {
        return ResponseEntity.ok(viagem);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param viagem
     * @return UriComponents
     */
    public static UriComponents ViagensItemJsonController.showURI(Viagem viagem) {
        return MvcUriComponentsBuilder
            .fromMethodCall(
                MvcUriComponentsBuilder.on(ViagensItemJsonController.class).show(viagem))
            .buildAndExpand(viagem.getId()).encode();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param storedViagem
     * @param viagem
     * @param result
     * @return ResponseEntity
     */
    @PutMapping(name = "update")
    public ResponseEntity<?> ViagensItemJsonController.update(@ModelAttribute Viagem storedViagem, @Valid @RequestBody Viagem viagem, BindingResult result) {
        
        if (result.hasErrors()) {
            return ResponseEntity.status(HttpStatus.CONFLICT).body(result);
        }
        viagem.setId(storedViagem.getId());
        getViagemService().save(viagem);
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param viagem
     * @return ResponseEntity
     */
    @DeleteMapping(name = "delete")
    public ResponseEntity<?> ViagensItemJsonController.delete(@ModelAttribute Viagem viagem) {
        getViagemService().delete(viagem);
        return ResponseEntity.ok().build();
    }
    
}
