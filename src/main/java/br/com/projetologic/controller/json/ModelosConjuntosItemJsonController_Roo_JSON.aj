// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package br.com.projetologic.controller.json;

import br.com.projetologic.controller.json.ModelosConjuntosItemJsonController;
import br.com.projetologic.model.ModeloConjunto;
import br.com.projetologic.service.api.ModeloConjuntoService;
import io.springlets.web.NotFoundException;
import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder;
import org.springframework.web.util.UriComponents;

privileged aspect ModelosConjuntosItemJsonController_Roo_JSON {
    
    declare @type: ModelosConjuntosItemJsonController: @RestController;
    
    declare @type: ModelosConjuntosItemJsonController: @RequestMapping(value = "/modelosconjuntos/{modeloConjunto}", name = "ModelosConjuntosItemJsonController", produces = MediaType.APPLICATION_JSON_VALUE);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private ModeloConjuntoService ModelosConjuntosItemJsonController.modeloConjuntoService;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param modeloConjuntoService
     */
    @Autowired
    public ModelosConjuntosItemJsonController.new(ModeloConjuntoService modeloConjuntoService) {
        this.modeloConjuntoService = modeloConjuntoService;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return ModeloConjuntoService
     */
    public ModeloConjuntoService ModelosConjuntosItemJsonController.getModeloConjuntoService() {
        return modeloConjuntoService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param modeloConjuntoService
     */
    public void ModelosConjuntosItemJsonController.setModeloConjuntoService(ModeloConjuntoService modeloConjuntoService) {
        this.modeloConjuntoService = modeloConjuntoService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return ModeloConjunto
     */
    @ModelAttribute
    public ModeloConjunto ModelosConjuntosItemJsonController.getModeloConjunto(@PathVariable("modeloConjunto") Long id) {
        ModeloConjunto modeloConjunto = modeloConjuntoService.findOne(id);
        if (modeloConjunto == null) {
            throw new NotFoundException(String.format("ModeloConjunto with identifier '%s' not found",id));
        }
        return modeloConjunto;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param modeloConjunto
     * @return ResponseEntity
     */
    @GetMapping(name = "show")
    public ResponseEntity<?> ModelosConjuntosItemJsonController.show(@ModelAttribute ModeloConjunto modeloConjunto) {
        return ResponseEntity.ok(modeloConjunto);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param modeloConjunto
     * @return UriComponents
     */
    public static UriComponents ModelosConjuntosItemJsonController.showURI(ModeloConjunto modeloConjunto) {
        return MvcUriComponentsBuilder
            .fromMethodCall(
                MvcUriComponentsBuilder.on(ModelosConjuntosItemJsonController.class).show(modeloConjunto))
            .buildAndExpand(modeloConjunto.getId()).encode();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param storedModeloConjunto
     * @param modeloConjunto
     * @param result
     * @return ResponseEntity
     */
    @PutMapping(name = "update")
    public ResponseEntity<?> ModelosConjuntosItemJsonController.update(@ModelAttribute ModeloConjunto storedModeloConjunto, @Valid @RequestBody ModeloConjunto modeloConjunto, BindingResult result) {
        
        if (result.hasErrors()) {
            return ResponseEntity.status(HttpStatus.CONFLICT).body(result);
        }
        modeloConjunto.setId(storedModeloConjunto.getId());
        getModeloConjuntoService().save(modeloConjunto);
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param modeloConjunto
     * @return ResponseEntity
     */
    @DeleteMapping(name = "delete")
    public ResponseEntity<?> ModelosConjuntosItemJsonController.delete(@ModelAttribute ModeloConjunto modeloConjunto) {
        getModeloConjuntoService().delete(modeloConjunto);
        return ResponseEntity.ok().build();
    }
    
}
