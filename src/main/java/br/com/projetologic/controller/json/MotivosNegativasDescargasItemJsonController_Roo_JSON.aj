// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package br.com.projetologic.controller.json;

import br.com.projetologic.controller.json.MotivosNegativasDescargasItemJsonController;
import br.com.projetologic.model.MotivoNegativaDescarga;
import br.com.projetologic.service.api.MotivoNegativaDescargaService;
import io.springlets.web.NotFoundException;
import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder;
import org.springframework.web.util.UriComponents;

privileged aspect MotivosNegativasDescargasItemJsonController_Roo_JSON {
    
    declare @type: MotivosNegativasDescargasItemJsonController: @RestController;
    
    declare @type: MotivosNegativasDescargasItemJsonController: @RequestMapping(value = "/motivosnegativasdescargas/{motivoNegativaDescarga}", name = "MotivosNegativasDescargasItemJsonController", produces = MediaType.APPLICATION_JSON_VALUE);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private MotivoNegativaDescargaService MotivosNegativasDescargasItemJsonController.motivoNegativaDescargaService;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param motivoNegativaDescargaService
     */
    @Autowired
    public MotivosNegativasDescargasItemJsonController.new(MotivoNegativaDescargaService motivoNegativaDescargaService) {
        this.motivoNegativaDescargaService = motivoNegativaDescargaService;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return MotivoNegativaDescargaService
     */
    public MotivoNegativaDescargaService MotivosNegativasDescargasItemJsonController.getMotivoNegativaDescargaService() {
        return motivoNegativaDescargaService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param motivoNegativaDescargaService
     */
    public void MotivosNegativasDescargasItemJsonController.setMotivoNegativaDescargaService(MotivoNegativaDescargaService motivoNegativaDescargaService) {
        this.motivoNegativaDescargaService = motivoNegativaDescargaService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return MotivoNegativaDescarga
     */
    @ModelAttribute
    public MotivoNegativaDescarga MotivosNegativasDescargasItemJsonController.getMotivoNegativaDescarga(@PathVariable("motivoNegativaDescarga") Long id) {
        MotivoNegativaDescarga motivoNegativaDescarga = motivoNegativaDescargaService.findOne(id);
        if (motivoNegativaDescarga == null) {
            throw new NotFoundException(String.format("MotivoNegativaDescarga with identifier '%s' not found",id));
        }
        return motivoNegativaDescarga;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param motivoNegativaDescarga
     * @return ResponseEntity
     */
    @GetMapping(name = "show")
    public ResponseEntity<?> MotivosNegativasDescargasItemJsonController.show(@ModelAttribute MotivoNegativaDescarga motivoNegativaDescarga) {
        return ResponseEntity.ok(motivoNegativaDescarga);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param motivoNegativaDescarga
     * @return UriComponents
     */
    public static UriComponents MotivosNegativasDescargasItemJsonController.showURI(MotivoNegativaDescarga motivoNegativaDescarga) {
        return MvcUriComponentsBuilder
            .fromMethodCall(
                MvcUriComponentsBuilder.on(MotivosNegativasDescargasItemJsonController.class).show(motivoNegativaDescarga))
            .buildAndExpand(motivoNegativaDescarga.getId()).encode();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param storedMotivoNegativaDescarga
     * @param motivoNegativaDescarga
     * @param result
     * @return ResponseEntity
     */
    @PutMapping(name = "update")
    public ResponseEntity<?> MotivosNegativasDescargasItemJsonController.update(@ModelAttribute MotivoNegativaDescarga storedMotivoNegativaDescarga, @Valid @RequestBody MotivoNegativaDescarga motivoNegativaDescarga, BindingResult result) {
        
        if (result.hasErrors()) {
            return ResponseEntity.status(HttpStatus.CONFLICT).body(result);
        }
        motivoNegativaDescarga.setId(storedMotivoNegativaDescarga.getId());
        getMotivoNegativaDescargaService().save(motivoNegativaDescarga);
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param motivoNegativaDescarga
     * @return ResponseEntity
     */
    @DeleteMapping(name = "delete")
    public ResponseEntity<?> MotivosNegativasDescargasItemJsonController.delete(@ModelAttribute MotivoNegativaDescarga motivoNegativaDescarga) {
        getMotivoNegativaDescargaService().delete(motivoNegativaDescarga);
        return ResponseEntity.ok().build();
    }
    
}
