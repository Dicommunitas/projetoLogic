// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package br.com.projetologic.controller.json;

import br.com.projetologic.controller.json.VeiculosItemJsonController;
import br.com.projetologic.model.Veiculo;
import br.com.projetologic.service.api.VeiculoService;
import io.springlets.web.NotFoundException;
import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder;
import org.springframework.web.util.UriComponents;

privileged aspect VeiculosItemJsonController_Roo_JSON {
    
    declare @type: VeiculosItemJsonController: @RestController;
    
    declare @type: VeiculosItemJsonController: @RequestMapping(value = "/veiculos/{veiculo}", name = "VeiculosItemJsonController", produces = MediaType.APPLICATION_JSON_VALUE);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private VeiculoService VeiculosItemJsonController.veiculoService;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param veiculoService
     */
    @Autowired
    public VeiculosItemJsonController.new(VeiculoService veiculoService) {
        this.veiculoService = veiculoService;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return VeiculoService
     */
    public VeiculoService VeiculosItemJsonController.getVeiculoService() {
        return veiculoService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param veiculoService
     */
    public void VeiculosItemJsonController.setVeiculoService(VeiculoService veiculoService) {
        this.veiculoService = veiculoService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Veiculo
     */
    @ModelAttribute
    public Veiculo VeiculosItemJsonController.getVeiculo(@PathVariable("veiculo") Long id) {
        Veiculo veiculo = veiculoService.findOne(id);
        if (veiculo == null) {
            throw new NotFoundException(String.format("Veiculo with identifier '%s' not found",id));
        }
        return veiculo;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param veiculo
     * @return ResponseEntity
     */
    @GetMapping(name = "show")
    public ResponseEntity<?> VeiculosItemJsonController.show(@ModelAttribute Veiculo veiculo) {
        return ResponseEntity.ok(veiculo);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param veiculo
     * @return UriComponents
     */
    public static UriComponents VeiculosItemJsonController.showURI(Veiculo veiculo) {
        return MvcUriComponentsBuilder
            .fromMethodCall(
                MvcUriComponentsBuilder.on(VeiculosItemJsonController.class).show(veiculo))
            .buildAndExpand(veiculo.getId()).encode();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param storedVeiculo
     * @param veiculo
     * @param result
     * @return ResponseEntity
     */
    @PutMapping(name = "update")
    public ResponseEntity<?> VeiculosItemJsonController.update(@ModelAttribute Veiculo storedVeiculo, @Valid @RequestBody Veiculo veiculo, BindingResult result) {
        
        if (result.hasErrors()) {
            return ResponseEntity.status(HttpStatus.CONFLICT).body(result);
        }
        veiculo.setId(storedVeiculo.getId());
        getVeiculoService().save(veiculo);
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param veiculo
     * @return ResponseEntity
     */
    @DeleteMapping(name = "delete")
    public ResponseEntity<?> VeiculosItemJsonController.delete(@ModelAttribute Veiculo veiculo) {
        getVeiculoService().delete(veiculo);
        return ResponseEntity.ok().build();
    }
    
}
