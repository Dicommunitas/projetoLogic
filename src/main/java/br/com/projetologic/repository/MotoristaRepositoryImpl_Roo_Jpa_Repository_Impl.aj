// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package br.com.projetologic.repository;

import br.com.projetologic.model.Motorista;
import br.com.projetologic.model.QMotorista;
import br.com.projetologic.repository.MotoristaRepositoryImpl;
import com.querydsl.core.types.Path;
import com.querydsl.jpa.JPQLQuery;
import io.springlets.data.domain.GlobalSearch;
import io.springlets.data.jpa.repository.support.QueryDslRepositorySupportExt.AttributeMappingBuilder;
import java.util.List;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.transaction.annotation.Transactional;

privileged aspect MotoristaRepositoryImpl_Roo_Jpa_Repository_Impl {
    
    declare @type: MotoristaRepositoryImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String MotoristaRepositoryImpl.NOME = "nome";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String MotoristaRepositoryImpl.CPF = "cpf";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String MotoristaRepositoryImpl.RG = "rg";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String MotoristaRepositoryImpl.ENDERECO = "endereco";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String MotoristaRepositoryImpl.TELEFONE_1 = "telefone1";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String MotoristaRepositoryImpl.TELEFONE_2 = "telefone2";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String MotoristaRepositoryImpl.EMAIL = "email";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String MotoristaRepositoryImpl.DATA_NASCIMENTO = "dataNascimento";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String MotoristaRepositoryImpl.CREATED_DATE = "createdDate";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String MotoristaRepositoryImpl.CREATED_BY = "createdBy";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String MotoristaRepositoryImpl.MODIFIED_DATE = "modifiedDate";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String MotoristaRepositoryImpl.MODIFIED_BY = "modifiedBy";
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Motorista> MotoristaRepositoryImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        
        QMotorista motorista = QMotorista.motorista;
        
        JPQLQuery<Motorista> query = from(motorista);
        
        Path<?>[] paths = new Path<?>[] {motorista.nome,motorista.cpf,motorista.rg,motorista.endereco,motorista.telefone1,motorista.telefone2,motorista.email,motorista.dataNascimento,motorista.createdDate,motorista.createdBy,motorista.modifiedDate,motorista.modifiedBy};        
        applyGlobalSearch(globalSearch, query, paths);
        
        AttributeMappingBuilder mapping = buildMapper()
			.map(NOME, motorista.nome)
			.map(CPF, motorista.cpf)
			.map(RG, motorista.rg)
			.map(ENDERECO, motorista.endereco)
			.map(TELEFONE_1, motorista.telefone1)
			.map(TELEFONE_2, motorista.telefone2)
			.map(EMAIL, motorista.email)
			.map(DATA_NASCIMENTO, motorista.dataNascimento)
			.map(CREATED_DATE, motorista.createdDate)
			.map(CREATED_BY, motorista.createdBy)
			.map(MODIFIED_DATE, motorista.modifiedDate)
			.map(MODIFIED_BY, motorista.modifiedBy);
        
        applyPagination(pageable, query, mapping);
        applyOrderById(query);
        
        return loadPage(query, pageable, motorista);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Motorista> MotoristaRepositoryImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        
        QMotorista motorista = QMotorista.motorista;
        
        JPQLQuery<Motorista> query = from(motorista);
        
        Path<?>[] paths = new Path<?>[] {motorista.nome,motorista.cpf,motorista.rg,motorista.endereco,motorista.telefone1,motorista.telefone2,motorista.email,motorista.dataNascimento,motorista.createdDate,motorista.createdBy,motorista.modifiedDate,motorista.modifiedBy};        
        applyGlobalSearch(globalSearch, query, paths);
        
        // Also, filter by the provided ids
        query.where(motorista.id.in(ids));
        
        AttributeMappingBuilder mapping = buildMapper()
			.map(NOME, motorista.nome)
			.map(CPF, motorista.cpf)
			.map(RG, motorista.rg)
			.map(ENDERECO, motorista.endereco)
			.map(TELEFONE_1, motorista.telefone1)
			.map(TELEFONE_2, motorista.telefone2)
			.map(EMAIL, motorista.email)
			.map(DATA_NASCIMENTO, motorista.dataNascimento)
			.map(CREATED_DATE, motorista.createdDate)
			.map(CREATED_BY, motorista.createdBy)
			.map(MODIFIED_DATE, motorista.modifiedDate)
			.map(MODIFIED_BY, motorista.modifiedBy);
        
        applyPagination(pageable, query, mapping);
        applyOrderById(query);
        
        return loadPage(query, pageable, motorista);
    }
    
}
